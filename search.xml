<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>hexo+github搭建博客</title>
    <url>/wangchaofan.github.io/2022/04/14/my-site/</url>
    <content><![CDATA[<h2 id="使用github-hexo实现博客网站的建立，在此记录。便于后来者少走弯路。"><a href="#使用github-hexo实现博客网站的建立，在此记录。便于后来者少走弯路。" class="headerlink" title="使用github+hexo实现博客网站的建立，在此记录。便于后来者少走弯路。"></a>使用github+hexo实现博客网站的建立，在此记录。便于后来者少走弯路。</h2><h3 id="1-创建一个以-xxx-github-io为名的repo，此处的xxx应为本人的账号名称。"><a href="#1-创建一个以-xxx-github-io为名的repo，此处的xxx应为本人的账号名称。" class="headerlink" title="1.创建一个以 xxx.github.io为名的repo，此处的xxx应为本人的账号名称。"></a>1.创建一个以 xxx.github.io为名的repo，此处的xxx应为本人的账号名称。</h3><h3 id="2-在repo的setting中开启Pages，由此可以使用github来托管网站"><a href="#2-在repo的setting中开启Pages，由此可以使用github来托管网站" class="headerlink" title="2.在repo的setting中开启Pages，由此可以使用github来托管网站"></a>2.在repo的setting中开启Pages，由此可以使用github来托管网站</h3><h3 id="3-终端下载npm，然后通过npm安装hexo"><a href="#3-终端下载npm，然后通过npm安装hexo" class="headerlink" title="3.终端下载npm，然后通过npm安装hexo"></a>3.终端下载npm，然后通过npm安装hexo</h3><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line"><span class="keyword">brew </span><span class="keyword">install </span>npm</span><br><span class="line">npm <span class="keyword">install </span>-g hexo-cli </span><br></pre></td></tr></table></figure>
<h3 id="4-hexo初始化项目并创建第一条博客"><a href="#4-hexo初始化项目并创建第一条博客" class="headerlink" title="4.hexo初始化项目并创建第一条博客"></a>4.hexo初始化项目并创建第一条博客</h3><figure class="highlight csharp"><table><tr><td class="code"><pre><span class="line">hexo <span class="keyword">init</span> blog</span><br><span class="line">hexo <span class="keyword">new</span> first_blog</span><br></pre></td></tr></table></figure>
<h3 id="5-为推送网站上github，需要修改项目根目录下的-config-yml，此配置文件主要用作站点全局配置。"><a href="#5-为推送网站上github，需要修改项目根目录下的-config-yml，此配置文件主要用作站点全局配置。" class="headerlink" title="5.为推送网站上github，需要修改项目根目录下的_config.yml，此配置文件主要用作站点全局配置。"></a>5.为推送网站上github，需要修改项目根目录下的_config.yml，此配置文件主要用作站点全局配置。</h3><figure class="highlight mipsasm"><table><tr><td class="code"><pre><span class="line">vim _<span class="built_in">config</span>.yml</span><br></pre></td></tr></table></figure>
<blockquote>
<p>6.在根目录_config.yml文件最后位置修改deploy配置,此处的repo路径应为新创建的项目路径</p>
</blockquote>
<figure class="highlight dts"><table><tr><td class="code"><pre><span class="line"><span class="symbol">deploy:</span></span><br><span class="line"><span class="symbol">  type:</span> git</span><br><span class="line"><span class="symbol">  repo:</span> https:<span class="comment">//github.com/wangchaofan/wangchaofan.github.io.git</span></span><br><span class="line"><span class="symbol">  branch:</span> master</span><br></pre></td></tr></table></figure>
<blockquote>
<p>7.hexo常规操作</p>
<ul>
<li>hexo clean 清除缓存</li>
<li>hexo g 生成网页</li>
<li>hexo s 本地发布页面</li>
<li>hexo d 远程推送github</li>
</ul>
</blockquote>
<h3 id="8-在根目录config-yml中配置-url与root。注意：url应为github-pages生成的地址，root为本仓库的仓库名称。此处不配置将无法加载js与css"><a href="#8-在根目录config-yml中配置-url与root。注意：url应为github-pages生成的地址，root为本仓库的仓库名称。此处不配置将无法加载js与css" class="headerlink" title="8. 在根目录config.yml中配置 url与root。注意：url应为github pages生成的地址，root为本仓库的仓库名称。此处不配置将无法加载js与css"></a>8. 在根目录config.yml中配置 url与root。注意：url应为github pages生成的地址，root为本仓库的仓库名称。此处不配置将无法加载js与css</h3><figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">url: https:<span class="regexp">//</span>wangchaofan2018.github.io<span class="regexp">/wangchaofan.github.io/</span></span><br><span class="line">root: /wangchaofan.github.io</span><br></pre></td></tr></table></figure>
<h3 id="9-在样式库选择自己喜欢的样式，按下方命令配置到-x2F-themes-x2F-中-再在根目录-config文件中配置theme字段。"><a href="#9-在样式库选择自己喜欢的样式，按下方命令配置到-x2F-themes-x2F-中-再在根目录-config文件中配置theme字段。" class="headerlink" title="9.在样式库选择自己喜欢的样式，按下方命令配置到 .&#x2F;themes&#x2F;中,再在根目录_config文件中配置theme字段。"></a>9.在样式库选择自己喜欢的样式，按下方命令配置到 .&#x2F;themes&#x2F;中,再在根目录_config文件中配置theme字段。</h3><p>样式库：<a href="https://hexo.io/themes/">theme</a></p>
<figure class="highlight awk"><table><tr><td class="code"><pre><span class="line">git clone https:<span class="regexp">//gi</span>thub.com<span class="regexp">/iissnan/</span>hexo-theme-<span class="keyword">next</span> themes/<span class="keyword">next</span></span><br></pre></td></tr></table></figure>
<h3 id="10-可在-x2F-theme-x2F-next-x2F-中的-config-yml文件中修改，进行个性化配置。具体可参照如下链接"><a href="#10-可在-x2F-theme-x2F-next-x2F-中的-config-yml文件中修改，进行个性化配置。具体可参照如下链接" class="headerlink" title="10.可在&#x2F;theme&#x2F;next&#x2F;中的_config.yml文件中修改，进行个性化配置。具体可参照如下链接"></a>10.可在&#x2F;theme&#x2F;next&#x2F;中的_config.yml文件中修改，进行个性化配置。具体可参照如下链接</h3><p><a href="https://huangpiao.tech/2019/01/24/Hexo%E5%8D%9A%E5%AE%A2%E4%BC%98%E5%8C%96%E4%B9%8BNext%E4%B8%BB%E9%A2%98%E7%BE%8E%E5%8C%96/">next主题美化</a></p>
<h3 id="11-进入source-x2F-posts-x2F-文件夹"><a href="#11-进入source-x2F-posts-x2F-文件夹" class="headerlink" title="11.进入source&#x2F;_posts&#x2F;文件夹"></a>11.进入source&#x2F;_posts&#x2F;文件夹</h3><p>此处可以看到以md结尾的文件即为发布的文章，对其进行编辑。就此实现了博客的搭建以及第一篇博文的编写。</p>
]]></content>
  </entry>
  <entry>
    <title>基于统计模型的图像分割</title>
    <url>/wangchaofan.github.io/2022/04/15/%E5%9F%BA%E4%BA%8E%E7%BB%9F%E8%AE%A1%E6%A8%A1%E5%9E%8B%E7%9A%84%E5%9B%BE%E5%83%8F%E5%88%86%E5%89%B2/</url>
    <content><![CDATA[<h2 id="图像分割简介"><a href="#图像分割简介" class="headerlink" title="图像分割简介"></a>图像分割简介</h2><p>图像分割是使用计算机技术进行图像划分的一项技术，主要应用于医学影像、遥感图像、天文图像、自然图像上，通过对相似的特征点的提取，将图片进行划分，与图像识别有所不同的是，图像识别主要用于检测物体的存在，将其用方框大体标出，图像分割则要将物体边缘做很清晰的分割。<br>在计算机视觉中氛围三个层次，底层视觉、中层视觉、高层视觉。底层视觉是指对图片进行预处理，比如滤波、边缘检测、纹理等。中层视觉主要是 聚类分割、拟合线条、识别与跟踪。高层视觉是指模式分类、关联模型识别等。图像分割位于中层视觉的最前端。</p>
<h3 id="在图像分割中需要提取图像特征进行分割，而这一过程十分困难，现有的解决手段主要有："><a href="#在图像分割中需要提取图像特征进行分割，而这一过程十分困难，现有的解决手段主要有：" class="headerlink" title="在图像分割中需要提取图像特征进行分割，而这一过程十分困难，现有的解决手段主要有："></a>在图像分割中需要提取图像特征进行分割，而这一过程十分困难，现有的解决手段主要有：</h3><ul>
<li>限制图像类型</li>
<li>引入目标先验知识</li>
<li>引入人为交互信息</li>
<li>多幅图像联合<h3 id="图像分割根据分割的主体不同主要有如下几种"><a href="#图像分割根据分割的主体不同主要有如下几种" class="headerlink" title="图像分割根据分割的主体不同主要有如下几种"></a>图像分割根据分割的主体不同主要有如下几种</h3></li>
</ul>
<ol>
<li>基于边缘的方法</li>
<li>基于区域的方法</li>
<li>综合边缘和区域的方法</li>
<li>其他分割方法（交互式分割、基于学习的分割、共分割）<h3 id="图像分割根据算法的不同主要有以下几种："><a href="#图像分割根据算法的不同主要有以下几种：" class="headerlink" title="图像分割根据算法的不同主要有以下几种："></a>图像分割根据算法的不同主要有以下几种：</h3></li>
<li>传统分割方法（阈值分割法、区域生长法、基于统计的分割方法）</li>
<li>主动轮廓以及水平集分割算法（较为实用）</li>
<li>图割方法（拉普拉斯分割）</li>
<li>深度学习分割</li>
</ol>
<h2 id="基于统计的图像分割"><a href="#基于统计的图像分割" class="headerlink" title="基于统计的图像分割"></a>基于统计的图像分割</h2><p>基于统计的图像分割主要使用聚类来实现图像的切割，通过观察像素点的密集程度来决定分类个数以及分类的区域。<br>统计分割需要考虑两个问题 1.如何表达每个像素的特征 2.如何聚类<br>问题1 我们可以使用图像的RGB值以及像素所处的空间坐标来做最基本的特征，此外还可以添加直方图特征、颜色矩、颜色相关图、Gabor特征等<br>问题2 我们可以使用K-means、mean-shift算法等来做聚类</p>
<h3 id="K-means聚类的定义"><a href="#K-means聚类的定义" class="headerlink" title="K-means聚类的定义"></a>K-means聚类的定义</h3><ol>
<li>K-means聚类算法是电信的基于距离的聚类算法</li>
<li>最终目标：得到紧促且独立的簇</li>
<li>采用均方误差最小化，学习问题</li>
</ol>
<h3 id="K-means算法"><a href="#K-means算法" class="headerlink" title="K-means算法"></a>K-means算法</h3><p>K-means主要使用的是交替迭代优化来实现簇的聚类。算法的思想如下：</p>
<ol>
<li>随机选择或者根据一定的算法选择K个样本点作为聚类中心</li>
<li>根据K个样本点，计算所有样本点距离聚类中心的距离，将样本点划归到离它最近的聚类中心的区域内。</li>
<li>根据已划分的区域，重新计算聚类中心。然后执行2，直到整个数据收敛或者低于某个阈值。</li>
</ol>
<h3 id="K-means问题分析"><a href="#K-means问题分析" class="headerlink" title="K-means问题分析"></a>K-means问题分析</h3><ol>
<li>在K-mean算法中，如果随机选择K个样本点的话，会导致多次结果不一致，很不稳定。有如下解决方案：</li>
</ol>
<ul>
<li>经验法：根据经验选择初始代表点。</li>
<li>密度法：以每个样本为中心，在一个球形区域内估计样本密度，将数据划分到不同的密度区域</li>
<li>中心分解方法：（推荐）将所有数据看成一个聚类，计算聚类中心，然后寻找与聚类中心最远的点，划入一部分数据点到该最远点所在区域，对剩下的数据，以此类推。</li>
</ul>
<ol start="2">
<li>K-means算法中，数据量过大时计算每个点距离聚类中心的距离，运算量过于庞大。此时可以使用样本点与聚类中心间的距离和聚类中心与聚类中心的距离做比较，同样能选出离样本点最近的聚类中心，很大程度降低运算量。（elkan K-means\ Mini Batch K-Means)</li>
</ol>
<p>3.K-menas算法中，选择使用距离计算聚类中心存在局限性，比如非凸曲面的簇以及大小相差很大的簇都会出现问题。同时聚类中心的计算对噪声、孤立数据点很敏感。</p>
<ol>
<li>对于非凸曲面的簇及相差很大的簇，可使用 流型学习 技术，使用谱聚类，改欧氏距离计算为相对位置计算。</li>
<li>对噪声，孤立点敏感的问题可使用</li>
</ol>
<ul>
<li>有鲁棒性的度量函数</li>
<li>模糊K-means方法</li>
<li>K-Mediods聚类技术</li>
<li>引入流型学习技术，使用谱聚类。</li>
</ul>
<ol start="3">
<li>对于大小相差很大的簇问题还可以采用多高斯聚类技术来解决。</li>
</ol>
]]></content>
      <tags>
        <tag>图像处理</tag>
      </tags>
  </entry>
</search>
